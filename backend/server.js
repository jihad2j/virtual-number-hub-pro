
const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const morgan = require('morgan');
const path = require('path');

// ุงูุชูููู
dotenv.config();
const app = express();
const PORT = process.env.PORT || 5000;
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/masarDB';

// ุฅุนุฏุงุฏ ุงููุดุบูุงุช ุงููุณูุทุฉ (middleware)
app.use(cors());
app.use(express.json());
app.use(morgan('dev'));

// ุชูููู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
mongoose.connect(MONGODB_URI)
  .then(() => {
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB ุจูุฌุงุญ');
  })
  .catch((err) => {
    console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', err);
  });

// ุชุถููู ุงููุณุงุฑุงุช
const routes = require('./routes');

// ุงุณุชุฎุฏุงู ุงููุณุงุฑุงุช ูู ุงูููู ุงูุฑุฆูุณู ูููุณุงุฑุงุช
app.use('/api', routes);

// ูุณุงุฑ ุงุฎุชุจุงุฑ ููุญุต ุงูุฎุงุฏู
app.get('/api/health', (req, res) => {
  res.status(200).json({
    status: 'success',
    message: 'ุงูุฎุงุฏู ูุนูู ุจุดูู ุทุจูุนู',
    timestamp: new Date()
  });
});

// ุงููุณุงุฑ ุงูุงูุชุฑุงุถู ูุฎุทุฃ 404
app.use((req, res, next) => {
  res.status(404).json({
    status: 'error',
    message: 'ุงููุณุงุฑ ุงููุทููุจ ุบูุฑ ููุฌูุฏ'
  });
});

// ูุนุงูุฌ ุงูุฃุฎุทุงุก
app.use((err, req, res, next) => {
  console.error('ุฎุทุฃ ูู ุงูุฎุงุฏู:', err);
  res.status(err.status || 500).json({
    status: 'error',
    message: err.message || 'ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู',
    error: process.env.NODE_ENV === 'development' ? err : {}
  });
});

// ุชุดุบูู ุงูุฎุงุฏู
app.listen(PORT, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`);
});

module.exports = app;
